# Derived from: http://blogs.mathworks.com/steve/2014/10/13/a-new-colormap-for-matlab-part-1-introduction/
# on July 27, 2015 and modified to produce a colortable suitable for use in
# VisIt.
#
# Credit to Steve Eddins
#

import matplotlib
import pylab as pl
from matplotlib.colors import ListedColormap
import numpy
import matplotlib.mlab as mlab

# Generate the difference of a pair of Gaussians and store this in z
# Example image stolen from matplotlib example gallery
delta = 0.05
x = numpy.arange(-5.0, 5.0, delta)
y = numpy.arange(-5.0, 5.0, delta)
X, Y = numpy.meshgrid(x, y)
Z1 = mlab.bivariate_normal(X, Y, 1.0, 1.0, 0.0, 0.0)
Z2 = mlab.bivariate_normal(X, Y, 1.5, 0.5, 1, 1)
Z = 10.0 * (Z2 - Z1)

# RGB values for Parula by Steve Eddins.

r_chan = [0.2081, 0.2091, 0.2101, 0.2109, 0.2116, 0.2121, 0.2124, 0.2125, 0.2123, 0.2118, 0.2111, 0.2099, 0.2084, 0.2063, 0.2038, 0.2006, 0.1968, 0.1921, 0.1867, 0.1802, 0.1728, 0.1641, 0.1541, 0.1427, 0.1295, 0.1147, 0.0986, 0.0816, 0.0646, 0.0482, 0.0329, 0.0213, 0.0136, 0.0086, 0.0060, 0.0051, 0.0054, 0.0067, 0.0089, 0.0116, 0.0148, 0.0184, 0.0223, 0.0264, 0.0306, 0.0349, 0.0394, 0.0437, 0.0477, 0.0514, 0.0549, 0.0582, 0.0612, 0.0640, 0.0666, 0.0689, 0.0710, 0.0729, 0.0746, 0.0761, 0.0773, 0.0782, 0.0789, 0.0794, 0.0795, 0.0793, 0.0788, 0.0778, 0.0764, 0.0746, 0.0724, 0.0698, 0.0668, 0.0636, 0.0600, 0.0562, 0.0523, 0.0484, 0.0445, 0.0408, 0.0372, 0.0342, 0.0317, 0.0296, 0.0279, 0.0265, 0.0255, 0.0248, 0.0243, 0.0239, 0.0237, 0.0235, 0.0233, 0.0231, 0.0230, 0.0229, 0.0227, 0.0227, 0.0232, 0.0238, 0.0246, 0.0263, 0.0282, 0.0306, 0.0338, 0.0373, 0.0418, 0.0467, 0.0516, 0.0574, 0.0629, 0.0692, 0.0755, 0.0820, 0.0889, 0.0956, 0.1031, 0.1104, 0.1180, 0.1258, 0.1335, 0.1418, 0.1499, 0.1585, 0.1671, 0.1758, 0.1849, 0.1938, 0.2033, 0.2128, 0.2224, 0.2324, 0.2423, 0.2527, 0.2631, 0.2735, 0.2845, 0.2953, 0.3064, 0.3177, 0.3289, 0.3405, 0.3520, 0.3635, 0.3753, 0.3869, 0.3986, 0.4103, 0.4218, 0.4334, 0.4447, 0.4561, 0.4672, 0.4783, 0.4892, 0.5000, 0.5106, 0.5212, 0.5315, 0.5418, 0.5519, 0.5619, 0.5718, 0.5816, 0.5913, 0.6009, 0.6103, 0.6197, 0.6290, 0.6382, 0.6473, 0.6564, 0.6653, 0.6742, 0.6830, 0.6918, 0.7004, 0.7091, 0.7176, 0.7261, 0.7346, 0.7430, 0.7513, 0.7596, 0.7679, 0.7761, 0.7843, 0.7924, 0.8005, 0.8085, 0.8166, 0.8246, 0.8325, 0.8405, 0.8484, 0.8563, 0.8642, 0.8720, 0.8798, 0.8877, 0.8954, 0.9032, 0.9110, 0.9187, 0.9264, 0.9341, 0.9417, 0.9493, 0.9567, 0.9639, 0.9708, 0.9773, 0.9831, 0.9882, 0.9922, 0.9952, 0.9973, 0.9986, 0.9991, 0.9990, 0.9985, 0.9976, 0.9964, 0.9950, 0.9933, 0.9914, 0.9894, 0.9873, 0.9851, 0.9828, 0.9805, 0.9782, 0.9759, 0.9736, 0.9713, 0.9692, 0.9672, 0.9654, 0.9638, 0.9623, 0.9611, 0.9600, 0.9593, 0.9588, 0.9586, 0.9587, 0.9591, 0.9599, 0.9610, 0.9624, 0.9641, 0.9662, 0.9685, 0.9710, 0.9736, 0.9763]
g_chan = [0.1663, 0.1721, 0.1779, 0.1837, 0.1895, 0.1954, 0.2013, 0.2072, 0.2132, 0.2192, 0.2253, 0.2315, 0.2377, 0.2440, 0.2503, 0.2568, 0.2632, 0.2698, 0.2764, 0.2832, 0.2902, 0.2975, 0.3052, 0.3132, 0.3217, 0.3306, 0.3397, 0.3486, 0.3572, 0.3651, 0.3724, 0.3792, 0.3853, 0.3911, 0.3965, 0.4017, 0.4066, 0.4113, 0.4159, 0.4203, 0.4246, 0.4288, 0.4329, 0.4370, 0.4410, 0.4449, 0.4488, 0.4526, 0.4564, 0.4602, 0.4640, 0.4677, 0.4714, 0.4751, 0.4788, 0.4825, 0.4862, 0.4899, 0.4937, 0.4974, 0.5012, 0.5051, 0.5089, 0.5129, 0.5169, 0.5210, 0.5251, 0.5295, 0.5339, 0.5384, 0.5431, 0.5479, 0.5527, 0.5577, 0.5627, 0.5677, 0.5727, 0.5777, 0.5826, 0.5874, 0.5922, 0.5968, 0.6012, 0.6055, 0.6097, 0.6137, 0.6176, 0.6214, 0.6250, 0.6285, 0.6319, 0.6352, 0.6384, 0.6415, 0.6445, 0.6474, 0.6503, 0.6531, 0.6558, 0.6585, 0.6611, 0.6637, 0.6663, 0.6688, 0.6712, 0.6737, 0.6761, 0.6784, 0.6808, 0.6831, 0.6854, 0.6877, 0.6899, 0.6921, 0.6943, 0.6965, 0.6986, 0.7007, 0.7028, 0.7049, 0.7069, 0.7089, 0.7109, 0.7129, 0.7148, 0.7168, 0.7186, 0.7205, 0.7223, 0.7241, 0.7259, 0.7275, 0.7292, 0.7308, 0.7324, 0.7339, 0.7354, 0.7368, 0.7381, 0.7394, 0.7406, 0.7417, 0.7428, 0.7438, 0.7446, 0.7454, 0.7461, 0.7467, 0.7473, 0.7477, 0.7482, 0.7485, 0.7487, 0.7489, 0.7491, 0.7491, 0.7492, 0.7492, 0.7491, 0.7490, 0.7489, 0.7487, 0.7485, 0.7482, 0.7479, 0.7476, 0.7473, 0.7469, 0.7465, 0.7460, 0.7456, 0.7451, 0.7446, 0.7441, 0.7435, 0.7430, 0.7424, 0.7418, 0.7412, 0.7405, 0.7399, 0.7392, 0.7385, 0.7378, 0.7372, 0.7364, 0.7357, 0.7350, 0.7343, 0.7336, 0.7329, 0.7322, 0.7315, 0.7308, 0.7301, 0.7294, 0.7288, 0.7282, 0.7276, 0.7271, 0.7266, 0.7262, 0.7259, 0.7256, 0.7256, 0.7256, 0.7259, 0.7264, 0.7273, 0.7285, 0.7303, 0.7326, 0.7355, 0.7390, 0.7431, 0.7476, 0.7524, 0.7573, 0.7624, 0.7675, 0.7726, 0.7778, 0.7829, 0.7880, 0.7931, 0.7981, 0.8032, 0.8083, 0.8133, 0.8184, 0.8235, 0.8286, 0.8337, 0.8389, 0.8441, 0.8494, 0.8548, 0.8603, 0.8659, 0.8716, 0.8774, 0.8834, 0.8895, 0.8958, 0.9022, 0.9088, 0.9155, 0.9225, 0.9296, 0.9368, 0.9443, 0.9518, 0.9595, 0.9673, 0.9752, 0.9831]
b_chan = [0.5292, 0.5411, 0.5530, 0.5650, 0.5771, 0.5892, 0.6013, 0.6135, 0.6258, 0.6381, 0.6505, 0.6629, 0.6753, 0.6878, 0.7003, 0.7129, 0.7255, 0.7381, 0.7507, 0.7634, 0.7762, 0.7890, 0.8017, 0.8145, 0.8269, 0.8387, 0.8495, 0.8588, 0.8664, 0.8722, 0.8765, 0.8796, 0.8815, 0.8827, 0.8833, 0.8834, 0.8831, 0.8825, 0.8816, 0.8805, 0.8793, 0.8779, 0.8763, 0.8747, 0.8729, 0.8711, 0.8692, 0.8672, 0.8652, 0.8632, 0.8611, 0.8589, 0.8568, 0.8546, 0.8525, 0.8503, 0.8481, 0.8460, 0.8439, 0.8418, 0.8398, 0.8378, 0.8359, 0.8341, 0.8324, 0.8308, 0.8293, 0.8280, 0.8270, 0.8261, 0.8253, 0.8247, 0.8243, 0.8239, 0.8237, 0.8234, 0.8231, 0.8228, 0.8223, 0.8217, 0.8209, 0.8198, 0.8186, 0.8171, 0.8154, 0.8135, 0.8114, 0.8091, 0.8066, 0.8039, 0.8010, 0.7980, 0.7948, 0.7916, 0.7881, 0.7846, 0.7810, 0.7773, 0.7735, 0.7696, 0.7656, 0.7615, 0.7574, 0.7532, 0.7490, 0.7446, 0.7402, 0.7358, 0.7313, 0.7267, 0.7221, 0.7173, 0.7126, 0.7078, 0.7029, 0.6979, 0.6929, 0.6878, 0.6827, 0.6775, 0.6723, 0.6669, 0.6616, 0.6561, 0.6507, 0.6451, 0.6395, 0.6338, 0.6281, 0.6223, 0.6165, 0.6107, 0.6048, 0.5988, 0.5929, 0.5869, 0.5809, 0.5749, 0.5689, 0.5630, 0.5570, 0.5512, 0.5453, 0.5396, 0.5339, 0.5283, 0.5229, 0.5175, 0.5123, 0.5072, 0.5021, 0.4972, 0.4924, 0.4877, 0.4831, 0.4786, 0.4741, 0.4698, 0.4655, 0.4613, 0.4571, 0.4531, 0.4490, 0.4451, 0.4412, 0.4374, 0.4335, 0.4298, 0.4261, 0.4224, 0.4188, 0.4152, 0.4116, 0.4081, 0.4046, 0.4011, 0.3976, 0.3942, 0.3908, 0.3874, 0.3840, 0.3806, 0.3773, 0.3739, 0.3706, 0.3673, 0.3639, 0.3606, 0.3573, 0.3539, 0.3506, 0.3472, 0.3438, 0.3404, 0.3370, 0.3336, 0.3300, 0.3265, 0.3229, 0.3193, 0.3156, 0.3117, 0.3078, 0.3038, 0.2996, 0.2953, 0.2907, 0.2859, 0.2808, 0.2754, 0.2696, 0.2634, 0.2570, 0.2504, 0.2437, 0.2373, 0.2310, 0.2251, 0.2195, 0.2141, 0.2090, 0.2042, 0.1995, 0.1949, 0.1905, 0.1863, 0.1821, 0.1780, 0.1740, 0.1700, 0.1661, 0.1622, 0.1583, 0.1544, 0.1505, 0.1465, 0.1425, 0.1385, 0.1343, 0.1301, 0.1258, 0.1215, 0.1171, 0.1126, 0.1082, 0.1036, 0.0990, 0.0944, 0.0897, 0.0850, 0.0802, 0.0753, 0.0703, 0.0651, 0.0597, 0.0538]

# Fill an array with 256 RGB tuples
ctab = []

print('<?xml version="1.0"?>')
print('<Object name="ColorTable">')
print('    <Field name="Version" type="string">2.9.2</Field>')
print('    <Object name="ColorControlPointList"> ')

for n,i in enumerate(r_chan):
    ctab.append([r_chan[n],g_chan[n],b_chan[n]])
    print('        <Object name="ColorControlPoint">')
    print('            <Field name="colors" type="unsignedCharArray" length="4"> '
            + str(int(r_chan[n]*255)) + ' '
            + str(int(g_chan[n]*255)) + ' '
            + str(int(b_chan[n]*255)) + ' 255 </Field>')
    print('            <Field name="position" type="float">' + str(n/(len(r_chan)-1)) + '</Field>')
    print('        </Object>')

print('        <Field name="category" type="string">UserDefined</Field>')
print('    </Object>')
print('</Object>     ')

# Create a new colourmap from the ctab array
parulacm = ListedColormap(ctab,name='parula',N=None)

# Plot example
fig = pl.figure()

ax = fig.add_subplot(111)

# New colourmap 'parulacm' can now be called like any other
cax = ax.imshow(Z,cmap=parulacm,interpolation = 'bicubic')

ax.set_xlabel('X')
ax.set_ylabel('Y')

cbar = pl.colorbar(cax)
cbar.set_label('Colorbar')

pl.savefig('parula.png',dpi=(120))
#pl.show()

pl.close()
